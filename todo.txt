1. Implement subsumption
=> is special case of
<= is generalization of

spec X = spec A && spec B
 X => A && X => B

spec Y = spec A || spec B
 A => Y && B => Y

S => True && True => True

False => S && False => False

X => A
!A => !X

!X => A if !A => X

!X = !A || !B
!A => !X && !B => !X

a) Composite
- conjunction
- disjunction

b) negation

2. Move members to interface

3. Extract superclass

4. Implement remainderUnsatisfiedBy(Specification other)

5. Dispatch isSpecialCaseOf and isGeneralizationOf based on parameter type using reflection
